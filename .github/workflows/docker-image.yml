name: Build and push Docker image

on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            network=host

      - name: Extract version from tag
        id: meta
        run: |
          if [[ "${GITHUB_REF#refs/tags/}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "is_release=true" >> $GITHUB_OUTPUT
          else
            echo "is_release=false" >> $GITHUB_OUTPUT
          fi

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        if: steps.meta.outputs.is_release == 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ github.repository_owner }}/kexamanager:${{ steps.meta.outputs.version }}
            ghcr.io/${{ github.repository_owner }}/kexamanager:latest
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/kexamanager:cache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/kexamanager:cache,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: needs.build.result == 'success'

    steps:
      - name: Deploy to VPS via Cloudflare Tunnel
        uses: and-fm/cloudflared-ssh-action@v3
        with:
          host: ${{ secrets.CLOUDFLARE_TUNNEL_HOST }}
          username: ${{ secrets.SHH_USER }}
          private_key_filename: id_ed25519
          private_key_value: ${{ secrets.SSH_PRIVATE_KEY_VALUE }}
          port: ${{ secrets.SSH_PORT }}
          service_token_id: ${{ secrets.SERVICE_TOKEN_ID }}
          service_token_secret: ${{ secrets.SERVICE_TOKEN_SECRET }}
          commands: |
            cd kexamanager
            docker compose pull
            docker compose down --remove-orphans
            docker compose up -d --remove-orphans
