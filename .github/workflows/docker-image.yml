name: Build and push Docker image

on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build:
    runs-on: ${{ matrix.arch == 'amd64' && 'ubuntu-latest' || 'ubuntu-24.04-arm' }}
    strategy:
      matrix:
        arch: [amd64, arm64]
    outputs:
      version: ${{ steps.meta.outputs.version }}
      is_release: ${{ steps.meta.outputs.is_release }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            network=host

      - name: Extract version from tag or commit
        id: meta
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "is_release=true" >> $GITHUB_OUTPUT
          else
            VERSION=${GITHUB_SHA::8}
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "is_release=false" >> $GITHUB_OUTPUT
          fi

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/${{ matrix.arch }}
          tags: ghcr.io/${{ github.repository }}:${{ steps.meta.outputs.version }}-${{ matrix.arch }}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository }}:cache-${{ matrix.arch }}
          cache-to: type=registry,ref=ghcr.io/${{ github.repository }}:cache-${{ matrix.arch }},mode=max

  merge-manifest:
    runs-on: ubuntu-latest
    needs: build
    if: needs.build.result == 'success'

    steps:
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push multi-arch manifest
        run: |
          VERSION=${{ needs.build.outputs.version }}

          # Create manifest for versioned tag
          docker buildx imagetools create -t ghcr.io/${{ github.repository }}:$VERSION \
            ghcr.io/${{ github.repository }}:$VERSION-amd64 \
            ghcr.io/${{ github.repository }}:$VERSION-arm64

          # Always tag as latest
          docker buildx imagetools create -t ghcr.io/${{ github.repository }}:latest \
            ghcr.io/${{ github.repository }}:$VERSION-amd64 \
            ghcr.io/${{ github.repository }}:$VERSION-arm64

  deploy:
    runs-on: ubuntu-latest
    needs: merge-manifest
    if: needs.merge-manifest.result == 'success'

    steps:
      - name: Deploy to VPS via Cloudflare Tunnel
        uses: and-fm/cloudflared-ssh-action@v3
        with:
          host: ${{ secrets.CLOUDFLARE_TUNNEL_HOST }}
          username: ${{ secrets.SHH_USER }}
          private_key_filename: id_ed25519
          private_key_value: ${{ secrets.SSH_PRIVATE_KEY_VALUE }}
          port: ${{ secrets.SSH_PORT }}
          service_token_id: ${{ secrets.SERVICE_TOKEN_ID }}
          service_token_secret: ${{ secrets.SERVICE_TOKEN_SECRET }}
          commands: |
            cd ${{ github.event.repository.name }}
            docker compose pull
            docker compose down --remove-orphans
            docker compose up -d --remove-orphans
